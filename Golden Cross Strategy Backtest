!pip install yfinance --upgrade --user
import yfinance as yf
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
ticker = 'MSFT'
start_date = '2019-01-01'
end_date = '2025-01-01'
data = yf.download(ticker, start=start_date, end=end_date)
data.head()
data['SMA50'] = data['Close'].rolling(window=50).mean()
data['SMA200'] = data['Close'].rolling(window=200).mean()
data['Signal'] = 0
data['Signal'] = np.where(data['SMA50'] > data['SMA200'], 1, 0)
data['Position'] = data['Signal'].diff()
print(data['Signal'].value_counts())
print(data[['SMA50', 'SMA200', 'Signal']].tail(20))
print(data['Position'].value_counts())
print((data['Signal'] == 1).sum())
data.tail()
plt.figure(figsize=(10,5))
plt.plot(data['Close'], label='Close Price', alpha=0.5)
plt.plot(data['SMA50'], label='50-day SMA', alpha=0.85)
plt.plot(data['SMA200'], label='200-day SMA', alpha=0.85)
plt.plot(data[data['Position'] == 1].index, 
         data['SMA50'][data['Position'] == 1], 
         '^', markersize=10, color='g', label='Golden Cross (Buy)')
plt.plot(data[data['Position'] == -1].index, 
         data['SMA50'][data['Position'] == -1], 
         'v', markersize=10, color='r', label='Death Cross (Sell)')
plt.title(f"{ticker} Golden Cross/Death Cross Strategy")
plt.xlabel("Date")
plt.ylabel("Price")
plt.legend()
plt.show()
data['Returns'] = data['Close'].pct_change()
data['Strategy'] = data['Returns'] * data['Signal'].shift(1)
data['Cumulative Market'] = (1 + data['Returns']).cumprod()
data['Cumulative Strategy'] = (1 + data['Strategy']).cumprod()
sharpe_strategy = data['Strategy'].mean() / data['Strategy'].std() * np.sqrt(252)
sharpe_market = data['Returns'].mean() / data['Returns'].std() * np.sqrt(252)
print("Sharpe Ratio (Golden Cross Strategy): {:.2f}".format(sharpe_strategy))
print("Sharpe Ratio (Buy & hold): {:.2f}".format(sharpe_market))
plt.figure(figsize=(10,5))
plt.plot(data['Cumulative Market'], label='Buy & Hold')
plt.plot(data['Cumulative Strategy'], label='Golden Cross Strategy')
plt.title(f"Cumulative Returns: {ticker} (Golden Cross vs Buy & Hold)")
plt.legend()
plt.show()

print("Final Strategy Return: {:.2f}%".format((data['Cumulative Strategy'][-1] - 1)*100))
print("Final Buy & Hold Return: {:.2f}%".format((data['Cumulative Market'][-1] - 1)*100))
